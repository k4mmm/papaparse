{"version":3,"sources":["index.js"],"names":["ctx","document","getElementById","getContext","GLOBAL","fetchData","fetch","then","r","text","data","parseData","mappedData","Papa","parse","header","reduce","acc","el","year","push","Year","tempsGlob","Number","Glob","tempsNHem","NHem","tempsSHem","SHem","Chart","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","fill","options","scales","y","ticks","callback","value"],"mappings":";AAAA,IAAIA,EAAMC,SAASC,eAAe,WAAWC,WAAW,MACxD,MAAMC,EAAS,GACf,SAASC,IACLC,MAAM,wBACDC,KAAKC,GAAKA,EAAEC,QACZF,KAAKG,IACIC,MAGAC,EAHYC,KAAKC,MAAMJ,EAAM,CAC/BK,QAAQ,IACTL,KAC0BM,OAAO,CAACC,EAAKC,KACtCD,EAAIE,KAAKC,KAAKF,EAAGG,MACjBJ,EAAIK,UAAUF,KAAKG,OAAOL,EAAGM,MAAQpB,GACrCa,EAAIQ,UAAUL,KAAKG,OAAOL,EAAGQ,MAAQtB,GACrCa,EAAIU,UAAUP,KAAKG,OAAOL,EAAGU,MAAQxB,GAC9Ba,GAEP,CAAEE,KAAM,GAAIG,UAAW,GAAIG,UAAW,GAAIE,UAAW,KAIrDE,IAAAA,MAAM7B,EAAK,CACf8B,KAAM,OACNpB,KAAM,CACFqB,OAAQnB,EAAWO,KACnBa,SAAU,CAAC,CACPC,MAAO,OACPvB,KAAME,EAAWa,UACjBS,gBAAiB,MACjBC,YAAY,MACZC,YAAa,EACbC,MAAM,GAEV,CACIJ,MAAO,OACPvB,KAAME,EAAWe,UACjBO,gBAAiB,OACjBC,YAAY,OACZC,YAAa,EACbC,MAAM,GAEV,CACIJ,MAAO,SACPvB,KAAME,EAAWU,UACjBY,gBAAiB,QACjBC,YAAY,QACZC,YAAa,EACbC,MAAM,KAGdC,QAAS,CACLC,OAAQ,CACJC,EAAG,CACCC,MAAO,CACHC,SAASC,GACEA,EAAQ,aAW/CtC","file":"src.dfa04498.js","sourceRoot":"../src","sourcesContent":["var ctx = document.getElementById('myChart').getContext('2d');\nconst GLOBAL = 14\nfunction fetchData() {\n    fetch(\"./ZonAnn.Ts+dSST.csv\")\n        .then(r => r.text())\n        .then(data => {\n            const parseData = Papa.parse(data, {\n                header: true\n            }).data\n            const mappedData = parseData.reduce((acc, el) => {\n                acc.year.push(el.Year);\n                acc.tempsGlob.push(Number(el.Glob) + GLOBAL);\n                acc.tempsNHem.push(Number(el.NHem) + GLOBAL);\n                acc.tempsSHem.push(Number(el.SHem) + GLOBAL);\n                return acc\n            },\n                { year: [], tempsGlob: [], tempsNHem: [], tempsSHem: [] }\n            )\n           \n            \n            new Chart(ctx, {\n            type: 'line',\n            data: {\n                labels: mappedData.year,\n                datasets: [{\n                    label: 'NHem',\n                    data: mappedData.tempsNHem,\n                    backgroundColor: 'red',\n                    borderColor:'red',\n                    borderWidth: 1,\n                    fill: false\n                },\n                {\n                    label: 'SHem',\n                    data: mappedData.tempsSHem,\n                    backgroundColor: \"blue\",\n                    borderColor:'blue',\n                    borderWidth: 1,\n                    fill: false\n                    },\n                {\n                    label: 'Global',\n                    data: mappedData.tempsGlob,\n                    backgroundColor: \"black\",\n                    borderColor:'black',\n                    borderWidth: 1,\n                    fill: false\n                }]\n            },\n            options: {\n                scales: {\n                    y: {\n                        ticks: {\n                            callback(value) {\n                                return value + \"°С\"\n                            }\n                        }\n                    }\n                }\n            }\n            \n        });\n    })\n}\n\nfetchData()\n\n\n"]}